Terminals unused in grammar

   err


État 0conflits: 4 décalage/réduction
État 17conflits: 1 décalage/réduction
État 23conflits: 1 décalage/réduction
État 63conflits: 2 décalage/réduction
État 155conflits: 1 décalage/réduction, 1 réduction/réduction


Grammaire

    0 $accept: program $end

    1 program: function_declaration_list program_principal

    2 function_declaration_list: /* vide */
    3                          | function_declaration_list function_declaration
    4                          | function_declaration

    5 function_declaration: type mc_ROUTINE function_name '(' parameter_list ')' declaration_list instruction_list return_statement mc_ENDR

    6 function_name: IDF

    7 parameter_list: /* vide */
    8               | IDF
    9               | parameter_list ',' IDF

   10 declaration_list: declaration
   11                 | declaration_list declaration

   12 declaration: type dec_variable_list ';'
   13            | type mc_DIMENSION '(' INT ')' ';'
   14            | type mc_DIMENSION '(' INT ',' INT ')' ';'
   15            | mc_CHARACTER IDF '*' INT ';'

   16 type: mc_INTEGER
   17     | mc_REAL
   18     | mc_LOGICAL
   19     | mc_CHARACTER

   20 dec_variable_list: IDF
   21                  | dec_variable_list ',' IDF

   22 inst_variable_list: variable
   23                   | inst_variable_list ',' variable

   24 variable: IDF
   25         | IDF '(' INT ')'
   26         | IDF '(' INT ',' INT ')'
   27         | IDF '(' IDF ')'
   28         | IDF '(' IDF ',' IDF ')'
   29         | IDF '(' expression ')'
   30         | IDF '(' expression ',' expression ')'

   31 expression: term
   32           | expression '+' term
   33           | expression '-' term

   34 term: factor
   35     | term '*' factor
   36     | term '/' factor

   37 factor: '(' expression ')'
   38       | '-' factor
   39       | variable
   40       | NBR

   41 condition: condition mc_OR logical_term
   42          | logical_term

   43 logical_term: logical_term mc_AND logical_factor
   44             | logical_factor

   45 logical_factor: '(' condition ')'
   46               | comparison_expression
   47               | logical_opd

   48 comparison_expression: expression logical_cmprt expression

   49 logical_cmprt: mc_EQ
   50              | mc_NE
   51              | mc_LT
   52              | mc_GT
   53              | mc_LE
   54              | mc_GE

   55 logical_opd: mc_TRUE
   56            | mc_FALSE

   57 program_principal: mc_PROGRAM IDF declaration_list instruction_list mc_END

   58 instruction_list: instruction
   59                 | instruction_list instruction

   60 instruction: assignment
   61            | read_statement
   62            | write_statement
   63            | function_call
   64            | if_statement
   65            | do_while_statement
   66            | equivalence_statement

   67 assignment: variable '=' expression ';'

   68 read_statement: mc_READ '(' variable ')' ';'

   69 write_statement: mc_WRITE '(' message ')' ';'

   70 message: not_void_message
   71        | void_message

   72 not_void_message: elt_message
   73                 | message ',' elt_message

   74 void_message: /* vide */

   75 elt_message: STRING_LITERAL
   76            | expression

   77 function_call: IDF '=' mc_CALL function_name '(' argument_list ')' ';'

   78 return_statement: function_name '=' expression ';'

   79 argument_list: /* vide */
   80              | expression
   81              | argument_list ',' expression

   82 do_while_statement: mc_DOWHILE '(' condition ')' instruction_list mc_ENDDO

   83 if_statement: mc_IF '(' condition ')' mc_THEN instruction_list mc_ENDIF
   84             | mc_IF '(' condition ')' mc_THEN instruction_list mc_ELSE instruction_list mc_ENDIF

   85 equivalence_statement: mc_EQUIVALENCE '(' inst_variable_list ')' ',' '(' inst_variable_list ')' ';'


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'(' (40) 5 13 14 25 26 27 28 29 30 37 45 68 69 77 82 83 84 85
')' (41) 5 13 14 25 26 27 28 29 30 37 45 68 69 77 82 83 84 85
'*' (42) 15 35
'+' (43) 32
',' (44) 9 14 21 23 26 28 30 73 81 85
'-' (45) 33 38
'/' (47) 36
';' (59) 12 13 14 15 67 68 69 77 78 85
'=' (61) 67 77 78
error (256)
IDF (258) 6 8 9 15 20 21 24 25 26 27 28 29 30 57 77
INT (259) 13 14 15 25 26
NBR (260) 40
STRING_LITERAL (261) 75
mc_EQ (262) 49
mc_NE (263) 50
mc_LE (264) 53
mc_LT (265) 51
mc_GE (266) 54
mc_GT (267) 52
mc_AND (268) 43
mc_OR (269) 41
mc_FALSE (270) 56
mc_TRUE (271) 55
mc_CHARACTER (272) 15 19
mc_INTEGER (273) 16
mc_LOGICAL (274) 18
mc_REAL (275) 17
mc_DIMENSION (276) 13 14
mc_DOWHILE (277) 82
mc_ENDDO (278) 82
mc_IF (279) 83 84
mc_THEN (280) 83 84
mc_ELSE (281) 84
mc_ENDIF (282) 83 84
mc_ROUTINE (283) 5
mc_CALL (284) 77
mc_ENDR (285) 5
mc_PROGRAM (286) 57
mc_END (287) 57
mc_READ (288) 68
mc_WRITE (289) 69
mc_EQUIVALENCE (290) 85
err (291)


Non-terminaux, suivis des règles où ils apparaissent

$accept (46)
    à gauche: 0
program (47)
    à gauche: 1, à droite: 0
function_declaration_list (48)
    à gauche: 2 3 4, à droite: 1 3
function_declaration (49)
    à gauche: 5, à droite: 3 4
function_name (50)
    à gauche: 6, à droite: 5 77 78
parameter_list (51)
    à gauche: 7 8 9, à droite: 5 9
declaration_list (52)
    à gauche: 10 11, à droite: 5 11 57
declaration (53)
    à gauche: 12 13 14 15, à droite: 10 11
type (54)
    à gauche: 16 17 18 19, à droite: 5 12 13 14
dec_variable_list (55)
    à gauche: 20 21, à droite: 12 21
inst_variable_list (56)
    à gauche: 22 23, à droite: 23 85
variable (57)
    à gauche: 24 25 26 27 28 29 30, à droite: 22 23 39 67 68
expression (58)
    à gauche: 31 32 33, à droite: 29 30 32 33 37 48 67 76 78 80 81
term (59)
    à gauche: 34 35 36, à droite: 31 32 33 35 36
factor (60)
    à gauche: 37 38 39 40, à droite: 34 35 36 38
condition (61)
    à gauche: 41 42, à droite: 41 45 82 83 84
logical_term (62)
    à gauche: 43 44, à droite: 41 42 43
logical_factor (63)
    à gauche: 45 46 47, à droite: 43 44
comparison_expression (64)
    à gauche: 48, à droite: 46
logical_cmprt (65)
    à gauche: 49 50 51 52 53 54, à droite: 48
logical_opd (66)
    à gauche: 55 56, à droite: 47
program_principal (67)
    à gauche: 57, à droite: 1
instruction_list (68)
    à gauche: 58 59, à droite: 5 57 59 82 83 84
instruction (69)
    à gauche: 60 61 62 63 64 65 66, à droite: 58 59
assignment (70)
    à gauche: 67, à droite: 60
read_statement (71)
    à gauche: 68, à droite: 61
write_statement (72)
    à gauche: 69, à droite: 62
message (73)
    à gauche: 70 71, à droite: 69 73
not_void_message (74)
    à gauche: 72 73, à droite: 70
void_message (75)
    à gauche: 74, à droite: 71
elt_message (76)
    à gauche: 75 76, à droite: 72 73
function_call (77)
    à gauche: 77, à droite: 63
return_statement (78)
    à gauche: 78, à droite: 5
argument_list (79)
    à gauche: 79 80 81, à droite: 77 81
do_while_statement (80)
    à gauche: 82, à droite: 65
if_statement (81)
    à gauche: 83 84, à droite: 64
equivalence_statement (82)
    à gauche: 85, à droite: 66


état 0

    0 $accept: . program $end

    mc_CHARACTER  décalage et aller à l'état 1
    mc_INTEGER    décalage et aller à l'état 2
    mc_LOGICAL    décalage et aller à l'état 3
    mc_REAL       décalage et aller à l'état 4

    mc_CHARACTER  [réduction par utilisation de la règle 2 (function_declaration_list)]
    mc_INTEGER    [réduction par utilisation de la règle 2 (function_declaration_list)]
    mc_LOGICAL    [réduction par utilisation de la règle 2 (function_declaration_list)]
    mc_REAL       [réduction par utilisation de la règle 2 (function_declaration_list)]
    $défaut       réduction par utilisation de la règle 2 (function_declaration_list)

    program                    aller à l'état 5
    function_declaration_list  aller à l'état 6
    function_declaration       aller à l'état 7
    type                       aller à l'état 8


état 1

   19 type: mc_CHARACTER .

    $défaut  réduction par utilisation de la règle 19 (type)


état 2

   16 type: mc_INTEGER .

    $défaut  réduction par utilisation de la règle 16 (type)


état 3

   18 type: mc_LOGICAL .

    $défaut  réduction par utilisation de la règle 18 (type)


état 4

   17 type: mc_REAL .

    $défaut  réduction par utilisation de la règle 17 (type)


état 5

    0 $accept: program . $end

    $end  décalage et aller à l'état 9


état 6

    1 program: function_declaration_list . program_principal
    3 function_declaration_list: function_declaration_list . function_declaration

    mc_CHARACTER  décalage et aller à l'état 1
    mc_INTEGER    décalage et aller à l'état 2
    mc_LOGICAL    décalage et aller à l'état 3
    mc_REAL       décalage et aller à l'état 4
    mc_PROGRAM    décalage et aller à l'état 10

    function_declaration  aller à l'état 11
    type                  aller à l'état 8
    program_principal     aller à l'état 12


état 7

    4 function_declaration_list: function_declaration .

    $défaut  réduction par utilisation de la règle 4 (function_declaration_list)


état 8

    5 function_declaration: type . mc_ROUTINE function_name '(' parameter_list ')' declaration_list instruction_list return_statement mc_ENDR

    mc_ROUTINE  décalage et aller à l'état 13


état 9

    0 $accept: program $end .

    $défaut  accepter


état 10

   57 program_principal: mc_PROGRAM . IDF declaration_list instruction_list mc_END

    IDF  décalage et aller à l'état 14


état 11

    3 function_declaration_list: function_declaration_list function_declaration .

    $défaut  réduction par utilisation de la règle 3 (function_declaration_list)


état 12

    1 program: function_declaration_list program_principal .

    $défaut  réduction par utilisation de la règle 1 (program)


état 13

    5 function_declaration: type mc_ROUTINE . function_name '(' parameter_list ')' declaration_list instruction_list return_statement mc_ENDR

    IDF  décalage et aller à l'état 15

    function_name  aller à l'état 16


état 14

   57 program_principal: mc_PROGRAM IDF . declaration_list instruction_list mc_END

    mc_CHARACTER  décalage et aller à l'état 17
    mc_INTEGER    décalage et aller à l'état 2
    mc_LOGICAL    décalage et aller à l'état 3
    mc_REAL       décalage et aller à l'état 4

    declaration_list  aller à l'état 18
    declaration       aller à l'état 19
    type              aller à l'état 20


état 15

    6 function_name: IDF .

    $défaut  réduction par utilisation de la règle 6 (function_name)


état 16

    5 function_declaration: type mc_ROUTINE function_name . '(' parameter_list ')' declaration_list instruction_list return_statement mc_ENDR

    '('  décalage et aller à l'état 21


état 17

   15 declaration: mc_CHARACTER . IDF '*' INT ';'
   19 type: mc_CHARACTER .

    IDF  décalage et aller à l'état 22

    IDF      [réduction par utilisation de la règle 19 (type)]
    $défaut  réduction par utilisation de la règle 19 (type)


état 18

   11 declaration_list: declaration_list . declaration
   57 program_principal: mc_PROGRAM IDF declaration_list . instruction_list mc_END

    IDF             décalage et aller à l'état 23
    mc_CHARACTER    décalage et aller à l'état 17
    mc_INTEGER      décalage et aller à l'état 2
    mc_LOGICAL      décalage et aller à l'état 3
    mc_REAL         décalage et aller à l'état 4
    mc_DOWHILE      décalage et aller à l'état 24
    mc_IF           décalage et aller à l'état 25
    mc_READ         décalage et aller à l'état 26
    mc_WRITE        décalage et aller à l'état 27
    mc_EQUIVALENCE  décalage et aller à l'état 28

    declaration            aller à l'état 29
    type                   aller à l'état 20
    variable               aller à l'état 30
    instruction_list       aller à l'état 31
    instruction            aller à l'état 32
    assignment             aller à l'état 33
    read_statement         aller à l'état 34
    write_statement        aller à l'état 35
    function_call          aller à l'état 36
    do_while_statement     aller à l'état 37
    if_statement           aller à l'état 38
    equivalence_statement  aller à l'état 39


état 19

   10 declaration_list: declaration .

    $défaut  réduction par utilisation de la règle 10 (declaration_list)


état 20

   12 declaration: type . dec_variable_list ';'
   13            | type . mc_DIMENSION '(' INT ')' ';'
   14            | type . mc_DIMENSION '(' INT ',' INT ')' ';'

    IDF           décalage et aller à l'état 40
    mc_DIMENSION  décalage et aller à l'état 41

    dec_variable_list  aller à l'état 42


état 21

    5 function_declaration: type mc_ROUTINE function_name '(' . parameter_list ')' declaration_list instruction_list return_statement mc_ENDR

    IDF  décalage et aller à l'état 43

    $défaut  réduction par utilisation de la règle 7 (parameter_list)

    parameter_list  aller à l'état 44


état 22

   15 declaration: mc_CHARACTER IDF . '*' INT ';'

    '*'  décalage et aller à l'état 45


état 23

   24 variable: IDF .
   25         | IDF . '(' INT ')'
   26         | IDF . '(' INT ',' INT ')'
   27         | IDF . '(' IDF ')'
   28         | IDF . '(' IDF ',' IDF ')'
   29         | IDF . '(' expression ')'
   30         | IDF . '(' expression ',' expression ')'
   77 function_call: IDF . '=' mc_CALL function_name '(' argument_list ')' ';'

    '='  décalage et aller à l'état 46
    '('  décalage et aller à l'état 47

    '='  [réduction par utilisation de la règle 24 (variable)]


état 24

   82 do_while_statement: mc_DOWHILE . '(' condition ')' instruction_list mc_ENDDO

    '('  décalage et aller à l'état 48


état 25

   83 if_statement: mc_IF . '(' condition ')' mc_THEN instruction_list mc_ENDIF
   84             | mc_IF . '(' condition ')' mc_THEN instruction_list mc_ELSE instruction_list mc_ENDIF

    '('  décalage et aller à l'état 49


état 26

   68 read_statement: mc_READ . '(' variable ')' ';'

    '('  décalage et aller à l'état 50


état 27

   69 write_statement: mc_WRITE . '(' message ')' ';'

    '('  décalage et aller à l'état 51


état 28

   85 equivalence_statement: mc_EQUIVALENCE . '(' inst_variable_list ')' ',' '(' inst_variable_list ')' ';'

    '('  décalage et aller à l'état 52


état 29

   11 declaration_list: declaration_list declaration .

    $défaut  réduction par utilisation de la règle 11 (declaration_list)


état 30

   67 assignment: variable . '=' expression ';'

    '='  décalage et aller à l'état 53


état 31

   57 program_principal: mc_PROGRAM IDF declaration_list instruction_list . mc_END
   59 instruction_list: instruction_list . instruction

    IDF             décalage et aller à l'état 23
    mc_DOWHILE      décalage et aller à l'état 24
    mc_IF           décalage et aller à l'état 25
    mc_END          décalage et aller à l'état 54
    mc_READ         décalage et aller à l'état 26
    mc_WRITE        décalage et aller à l'état 27
    mc_EQUIVALENCE  décalage et aller à l'état 28

    variable               aller à l'état 30
    instruction            aller à l'état 55
    assignment             aller à l'état 33
    read_statement         aller à l'état 34
    write_statement        aller à l'état 35
    function_call          aller à l'état 36
    do_while_statement     aller à l'état 37
    if_statement           aller à l'état 38
    equivalence_statement  aller à l'état 39


état 32

   58 instruction_list: instruction .

    $défaut  réduction par utilisation de la règle 58 (instruction_list)


état 33

   60 instruction: assignment .

    $défaut  réduction par utilisation de la règle 60 (instruction)


état 34

   61 instruction: read_statement .

    $défaut  réduction par utilisation de la règle 61 (instruction)


état 35

   62 instruction: write_statement .

    $défaut  réduction par utilisation de la règle 62 (instruction)


état 36

   63 instruction: function_call .

    $défaut  réduction par utilisation de la règle 63 (instruction)


état 37

   65 instruction: do_while_statement .

    $défaut  réduction par utilisation de la règle 65 (instruction)


état 38

   64 instruction: if_statement .

    $défaut  réduction par utilisation de la règle 64 (instruction)


état 39

   66 instruction: equivalence_statement .

    $défaut  réduction par utilisation de la règle 66 (instruction)


état 40

   20 dec_variable_list: IDF .

    $défaut  réduction par utilisation de la règle 20 (dec_variable_list)


état 41

   13 declaration: type mc_DIMENSION . '(' INT ')' ';'
   14            | type mc_DIMENSION . '(' INT ',' INT ')' ';'

    '('  décalage et aller à l'état 56


état 42

   12 declaration: type dec_variable_list . ';'
   21 dec_variable_list: dec_variable_list . ',' IDF

    ';'  décalage et aller à l'état 57
    ','  décalage et aller à l'état 58


état 43

    8 parameter_list: IDF .

    $défaut  réduction par utilisation de la règle 8 (parameter_list)


état 44

    5 function_declaration: type mc_ROUTINE function_name '(' parameter_list . ')' declaration_list instruction_list return_statement mc_ENDR
    9 parameter_list: parameter_list . ',' IDF

    ')'  décalage et aller à l'état 59
    ','  décalage et aller à l'état 60


état 45

   15 declaration: mc_CHARACTER IDF '*' . INT ';'

    INT  décalage et aller à l'état 61


état 46

   77 function_call: IDF '=' . mc_CALL function_name '(' argument_list ')' ';'

    mc_CALL  décalage et aller à l'état 62


état 47

   25 variable: IDF '(' . INT ')'
   26         | IDF '(' . INT ',' INT ')'
   27         | IDF '(' . IDF ')'
   28         | IDF '(' . IDF ',' IDF ')'
   29         | IDF '(' . expression ')'
   30         | IDF '(' . expression ',' expression ')'

    IDF  décalage et aller à l'état 63
    INT  décalage et aller à l'état 64
    NBR  décalage et aller à l'état 65
    '('  décalage et aller à l'état 66
    '-'  décalage et aller à l'état 67

    variable    aller à l'état 68
    expression  aller à l'état 69
    term        aller à l'état 70
    factor      aller à l'état 71


état 48

   82 do_while_statement: mc_DOWHILE '(' . condition ')' instruction_list mc_ENDDO

    IDF       décalage et aller à l'état 72
    NBR       décalage et aller à l'état 65
    mc_FALSE  décalage et aller à l'état 73
    mc_TRUE   décalage et aller à l'état 74
    '('       décalage et aller à l'état 75
    '-'       décalage et aller à l'état 67

    variable               aller à l'état 68
    expression             aller à l'état 76
    term                   aller à l'état 70
    factor                 aller à l'état 71
    condition              aller à l'état 77
    logical_term           aller à l'état 78
    logical_factor         aller à l'état 79
    comparison_expression  aller à l'état 80
    logical_opd            aller à l'état 81


état 49

   83 if_statement: mc_IF '(' . condition ')' mc_THEN instruction_list mc_ENDIF
   84             | mc_IF '(' . condition ')' mc_THEN instruction_list mc_ELSE instruction_list mc_ENDIF

    IDF       décalage et aller à l'état 72
    NBR       décalage et aller à l'état 65
    mc_FALSE  décalage et aller à l'état 73
    mc_TRUE   décalage et aller à l'état 74
    '('       décalage et aller à l'état 75
    '-'       décalage et aller à l'état 67

    variable               aller à l'état 68
    expression             aller à l'état 76
    term                   aller à l'état 70
    factor                 aller à l'état 71
    condition              aller à l'état 82
    logical_term           aller à l'état 78
    logical_factor         aller à l'état 79
    comparison_expression  aller à l'état 80
    logical_opd            aller à l'état 81


état 50

   68 read_statement: mc_READ '(' . variable ')' ';'

    IDF  décalage et aller à l'état 72

    variable  aller à l'état 83


état 51

   69 write_statement: mc_WRITE '(' . message ')' ';'

    IDF             décalage et aller à l'état 72
    NBR             décalage et aller à l'état 65
    STRING_LITERAL  décalage et aller à l'état 84
    '('             décalage et aller à l'état 66
    '-'             décalage et aller à l'état 67

    $défaut  réduction par utilisation de la règle 74 (void_message)

    variable          aller à l'état 68
    expression        aller à l'état 85
    term              aller à l'état 70
    factor            aller à l'état 71
    message           aller à l'état 86
    not_void_message  aller à l'état 87
    void_message      aller à l'état 88
    elt_message       aller à l'état 89


état 52

   85 equivalence_statement: mc_EQUIVALENCE '(' . inst_variable_list ')' ',' '(' inst_variable_list ')' ';'

    IDF  décalage et aller à l'état 72

    inst_variable_list  aller à l'état 90
    variable            aller à l'état 91


état 53

   67 assignment: variable '=' . expression ';'

    IDF  décalage et aller à l'état 72
    NBR  décalage et aller à l'état 65
    '('  décalage et aller à l'état 66
    '-'  décalage et aller à l'état 67

    variable    aller à l'état 68
    expression  aller à l'état 92
    term        aller à l'état 70
    factor      aller à l'état 71


état 54

   57 program_principal: mc_PROGRAM IDF declaration_list instruction_list mc_END .

    $défaut  réduction par utilisation de la règle 57 (program_principal)


état 55

   59 instruction_list: instruction_list instruction .

    $défaut  réduction par utilisation de la règle 59 (instruction_list)


état 56

   13 declaration: type mc_DIMENSION '(' . INT ')' ';'
   14            | type mc_DIMENSION '(' . INT ',' INT ')' ';'

    INT  décalage et aller à l'état 93


état 57

   12 declaration: type dec_variable_list ';' .

    $défaut  réduction par utilisation de la règle 12 (declaration)


état 58

   21 dec_variable_list: dec_variable_list ',' . IDF

    IDF  décalage et aller à l'état 94


état 59

    5 function_declaration: type mc_ROUTINE function_name '(' parameter_list ')' . declaration_list instruction_list return_statement mc_ENDR

    mc_CHARACTER  décalage et aller à l'état 17
    mc_INTEGER    décalage et aller à l'état 2
    mc_LOGICAL    décalage et aller à l'état 3
    mc_REAL       décalage et aller à l'état 4

    declaration_list  aller à l'état 95
    declaration       aller à l'état 19
    type              aller à l'état 20


état 60

    9 parameter_list: parameter_list ',' . IDF

    IDF  décalage et aller à l'état 96


état 61

   15 declaration: mc_CHARACTER IDF '*' INT . ';'

    ';'  décalage et aller à l'état 97


état 62

   77 function_call: IDF '=' mc_CALL . function_name '(' argument_list ')' ';'

    IDF  décalage et aller à l'état 15

    function_name  aller à l'état 98


état 63

   24 variable: IDF .
   25         | IDF . '(' INT ')'
   26         | IDF . '(' INT ',' INT ')'
   27         | IDF . '(' IDF ')'
   27         | IDF '(' IDF . ')'
   28         | IDF . '(' IDF ',' IDF ')'
   28         | IDF '(' IDF . ',' IDF ')'
   29         | IDF . '(' expression ')'
   30         | IDF . '(' expression ',' expression ')'

    '('  décalage et aller à l'état 47
    ')'  décalage et aller à l'état 99
    ','  décalage et aller à l'état 100

    ')'      [réduction par utilisation de la règle 24 (variable)]
    ','      [réduction par utilisation de la règle 24 (variable)]
    $défaut  réduction par utilisation de la règle 24 (variable)


état 64

   25 variable: IDF '(' INT . ')'
   26         | IDF '(' INT . ',' INT ')'

    ')'  décalage et aller à l'état 101
    ','  décalage et aller à l'état 102


état 65

   40 factor: NBR .

    $défaut  réduction par utilisation de la règle 40 (factor)


état 66

   37 factor: '(' . expression ')'

    IDF  décalage et aller à l'état 72
    NBR  décalage et aller à l'état 65
    '('  décalage et aller à l'état 66
    '-'  décalage et aller à l'état 67

    variable    aller à l'état 68
    expression  aller à l'état 103
    term        aller à l'état 70
    factor      aller à l'état 71


état 67

   38 factor: '-' . factor

    IDF  décalage et aller à l'état 72
    NBR  décalage et aller à l'état 65
    '('  décalage et aller à l'état 66
    '-'  décalage et aller à l'état 67

    variable  aller à l'état 68
    factor    aller à l'état 104


état 68

   39 factor: variable .

    $défaut  réduction par utilisation de la règle 39 (factor)


état 69

   29 variable: IDF '(' expression . ')'
   30         | IDF '(' expression . ',' expression ')'
   32 expression: expression . '+' term
   33           | expression . '-' term

    ')'  décalage et aller à l'état 105
    '+'  décalage et aller à l'état 106
    '-'  décalage et aller à l'état 107
    ','  décalage et aller à l'état 108


état 70

   31 expression: term .
   35 term: term . '*' factor
   36     | term . '/' factor

    '*'  décalage et aller à l'état 109
    '/'  décalage et aller à l'état 110

    $défaut  réduction par utilisation de la règle 31 (expression)


état 71

   34 term: factor .

    $défaut  réduction par utilisation de la règle 34 (term)


état 72

   24 variable: IDF .
   25         | IDF . '(' INT ')'
   26         | IDF . '(' INT ',' INT ')'
   27         | IDF . '(' IDF ')'
   28         | IDF . '(' IDF ',' IDF ')'
   29         | IDF . '(' expression ')'
   30         | IDF . '(' expression ',' expression ')'

    '('  décalage et aller à l'état 47

    $défaut  réduction par utilisation de la règle 24 (variable)


état 73

   56 logical_opd: mc_FALSE .

    $défaut  réduction par utilisation de la règle 56 (logical_opd)


état 74

   55 logical_opd: mc_TRUE .

    $défaut  réduction par utilisation de la règle 55 (logical_opd)


état 75

   37 factor: '(' . expression ')'
   45 logical_factor: '(' . condition ')'

    IDF       décalage et aller à l'état 72
    NBR       décalage et aller à l'état 65
    mc_FALSE  décalage et aller à l'état 73
    mc_TRUE   décalage et aller à l'état 74
    '('       décalage et aller à l'état 75
    '-'       décalage et aller à l'état 67

    variable               aller à l'état 68
    expression             aller à l'état 111
    term                   aller à l'état 70
    factor                 aller à l'état 71
    condition              aller à l'état 112
    logical_term           aller à l'état 78
    logical_factor         aller à l'état 79
    comparison_expression  aller à l'état 80
    logical_opd            aller à l'état 81


état 76

   32 expression: expression . '+' term
   33           | expression . '-' term
   48 comparison_expression: expression . logical_cmprt expression

    mc_EQ  décalage et aller à l'état 113
    mc_NE  décalage et aller à l'état 114
    mc_LE  décalage et aller à l'état 115
    mc_LT  décalage et aller à l'état 116
    mc_GE  décalage et aller à l'état 117
    mc_GT  décalage et aller à l'état 118
    '+'    décalage et aller à l'état 106
    '-'    décalage et aller à l'état 107

    logical_cmprt  aller à l'état 119


état 77

   41 condition: condition . mc_OR logical_term
   82 do_while_statement: mc_DOWHILE '(' condition . ')' instruction_list mc_ENDDO

    mc_OR  décalage et aller à l'état 120
    ')'    décalage et aller à l'état 121


état 78

   42 condition: logical_term .
   43 logical_term: logical_term . mc_AND logical_factor

    mc_AND  décalage et aller à l'état 122

    $défaut  réduction par utilisation de la règle 42 (condition)


état 79

   44 logical_term: logical_factor .

    $défaut  réduction par utilisation de la règle 44 (logical_term)


état 80

   46 logical_factor: comparison_expression .

    $défaut  réduction par utilisation de la règle 46 (logical_factor)


état 81

   47 logical_factor: logical_opd .

    $défaut  réduction par utilisation de la règle 47 (logical_factor)


état 82

   41 condition: condition . mc_OR logical_term
   83 if_statement: mc_IF '(' condition . ')' mc_THEN instruction_list mc_ENDIF
   84             | mc_IF '(' condition . ')' mc_THEN instruction_list mc_ELSE instruction_list mc_ENDIF

    mc_OR  décalage et aller à l'état 120
    ')'    décalage et aller à l'état 123


état 83

   68 read_statement: mc_READ '(' variable . ')' ';'

    ')'  décalage et aller à l'état 124


état 84

   75 elt_message: STRING_LITERAL .

    $défaut  réduction par utilisation de la règle 75 (elt_message)


état 85

   32 expression: expression . '+' term
   33           | expression . '-' term
   76 elt_message: expression .

    '+'  décalage et aller à l'état 106
    '-'  décalage et aller à l'état 107

    $défaut  réduction par utilisation de la règle 76 (elt_message)


état 86

   69 write_statement: mc_WRITE '(' message . ')' ';'
   73 not_void_message: message . ',' elt_message

    ')'  décalage et aller à l'état 125
    ','  décalage et aller à l'état 126


état 87

   70 message: not_void_message .

    $défaut  réduction par utilisation de la règle 70 (message)


état 88

   71 message: void_message .

    $défaut  réduction par utilisation de la règle 71 (message)


état 89

   72 not_void_message: elt_message .

    $défaut  réduction par utilisation de la règle 72 (not_void_message)


état 90

   23 inst_variable_list: inst_variable_list . ',' variable
   85 equivalence_statement: mc_EQUIVALENCE '(' inst_variable_list . ')' ',' '(' inst_variable_list ')' ';'

    ')'  décalage et aller à l'état 127
    ','  décalage et aller à l'état 128


état 91

   22 inst_variable_list: variable .

    $défaut  réduction par utilisation de la règle 22 (inst_variable_list)


état 92

   32 expression: expression . '+' term
   33           | expression . '-' term
   67 assignment: variable '=' expression . ';'

    ';'  décalage et aller à l'état 129
    '+'  décalage et aller à l'état 106
    '-'  décalage et aller à l'état 107


état 93

   13 declaration: type mc_DIMENSION '(' INT . ')' ';'
   14            | type mc_DIMENSION '(' INT . ',' INT ')' ';'

    ')'  décalage et aller à l'état 130
    ','  décalage et aller à l'état 131


état 94

   21 dec_variable_list: dec_variable_list ',' IDF .

    $défaut  réduction par utilisation de la règle 21 (dec_variable_list)


état 95

    5 function_declaration: type mc_ROUTINE function_name '(' parameter_list ')' declaration_list . instruction_list return_statement mc_ENDR
   11 declaration_list: declaration_list . declaration

    IDF             décalage et aller à l'état 23
    mc_CHARACTER    décalage et aller à l'état 17
    mc_INTEGER      décalage et aller à l'état 2
    mc_LOGICAL      décalage et aller à l'état 3
    mc_REAL         décalage et aller à l'état 4
    mc_DOWHILE      décalage et aller à l'état 24
    mc_IF           décalage et aller à l'état 25
    mc_READ         décalage et aller à l'état 26
    mc_WRITE        décalage et aller à l'état 27
    mc_EQUIVALENCE  décalage et aller à l'état 28

    declaration            aller à l'état 29
    type                   aller à l'état 20
    variable               aller à l'état 30
    instruction_list       aller à l'état 132
    instruction            aller à l'état 32
    assignment             aller à l'état 33
    read_statement         aller à l'état 34
    write_statement        aller à l'état 35
    function_call          aller à l'état 36
    do_while_statement     aller à l'état 37
    if_statement           aller à l'état 38
    equivalence_statement  aller à l'état 39


état 96

    9 parameter_list: parameter_list ',' IDF .

    $défaut  réduction par utilisation de la règle 9 (parameter_list)


état 97

   15 declaration: mc_CHARACTER IDF '*' INT ';' .

    $défaut  réduction par utilisation de la règle 15 (declaration)


état 98

   77 function_call: IDF '=' mc_CALL function_name . '(' argument_list ')' ';'

    '('  décalage et aller à l'état 133


état 99

   27 variable: IDF '(' IDF ')' .

    $défaut  réduction par utilisation de la règle 27 (variable)


état 100

   28 variable: IDF '(' IDF ',' . IDF ')'

    IDF  décalage et aller à l'état 134


état 101

   25 variable: IDF '(' INT ')' .

    $défaut  réduction par utilisation de la règle 25 (variable)


état 102

   26 variable: IDF '(' INT ',' . INT ')'

    INT  décalage et aller à l'état 135


état 103

   32 expression: expression . '+' term
   33           | expression . '-' term
   37 factor: '(' expression . ')'

    ')'  décalage et aller à l'état 136
    '+'  décalage et aller à l'état 106
    '-'  décalage et aller à l'état 107


état 104

   38 factor: '-' factor .

    $défaut  réduction par utilisation de la règle 38 (factor)


état 105

   29 variable: IDF '(' expression ')' .

    $défaut  réduction par utilisation de la règle 29 (variable)


état 106

   32 expression: expression '+' . term

    IDF  décalage et aller à l'état 72
    NBR  décalage et aller à l'état 65
    '('  décalage et aller à l'état 66
    '-'  décalage et aller à l'état 67

    variable  aller à l'état 68
    term      aller à l'état 137
    factor    aller à l'état 71


état 107

   33 expression: expression '-' . term

    IDF  décalage et aller à l'état 72
    NBR  décalage et aller à l'état 65
    '('  décalage et aller à l'état 66
    '-'  décalage et aller à l'état 67

    variable  aller à l'état 68
    term      aller à l'état 138
    factor    aller à l'état 71


état 108

   30 variable: IDF '(' expression ',' . expression ')'

    IDF  décalage et aller à l'état 72
    NBR  décalage et aller à l'état 65
    '('  décalage et aller à l'état 66
    '-'  décalage et aller à l'état 67

    variable    aller à l'état 68
    expression  aller à l'état 139
    term        aller à l'état 70
    factor      aller à l'état 71


état 109

   35 term: term '*' . factor

    IDF  décalage et aller à l'état 72
    NBR  décalage et aller à l'état 65
    '('  décalage et aller à l'état 66
    '-'  décalage et aller à l'état 67

    variable  aller à l'état 68
    factor    aller à l'état 140


état 110

   36 term: term '/' . factor

    IDF  décalage et aller à l'état 72
    NBR  décalage et aller à l'état 65
    '('  décalage et aller à l'état 66
    '-'  décalage et aller à l'état 67

    variable  aller à l'état 68
    factor    aller à l'état 141


état 111

   32 expression: expression . '+' term
   33           | expression . '-' term
   37 factor: '(' expression . ')'
   48 comparison_expression: expression . logical_cmprt expression

    mc_EQ  décalage et aller à l'état 113
    mc_NE  décalage et aller à l'état 114
    mc_LE  décalage et aller à l'état 115
    mc_LT  décalage et aller à l'état 116
    mc_GE  décalage et aller à l'état 117
    mc_GT  décalage et aller à l'état 118
    ')'    décalage et aller à l'état 136
    '+'    décalage et aller à l'état 106
    '-'    décalage et aller à l'état 107

    logical_cmprt  aller à l'état 119


état 112

   41 condition: condition . mc_OR logical_term
   45 logical_factor: '(' condition . ')'

    mc_OR  décalage et aller à l'état 120
    ')'    décalage et aller à l'état 142


état 113

   49 logical_cmprt: mc_EQ .

    $défaut  réduction par utilisation de la règle 49 (logical_cmprt)


état 114

   50 logical_cmprt: mc_NE .

    $défaut  réduction par utilisation de la règle 50 (logical_cmprt)


état 115

   53 logical_cmprt: mc_LE .

    $défaut  réduction par utilisation de la règle 53 (logical_cmprt)


état 116

   51 logical_cmprt: mc_LT .

    $défaut  réduction par utilisation de la règle 51 (logical_cmprt)


état 117

   54 logical_cmprt: mc_GE .

    $défaut  réduction par utilisation de la règle 54 (logical_cmprt)


état 118

   52 logical_cmprt: mc_GT .

    $défaut  réduction par utilisation de la règle 52 (logical_cmprt)


état 119

   48 comparison_expression: expression logical_cmprt . expression

    IDF  décalage et aller à l'état 72
    NBR  décalage et aller à l'état 65
    '('  décalage et aller à l'état 66
    '-'  décalage et aller à l'état 67

    variable    aller à l'état 68
    expression  aller à l'état 143
    term        aller à l'état 70
    factor      aller à l'état 71


état 120

   41 condition: condition mc_OR . logical_term

    IDF       décalage et aller à l'état 72
    NBR       décalage et aller à l'état 65
    mc_FALSE  décalage et aller à l'état 73
    mc_TRUE   décalage et aller à l'état 74
    '('       décalage et aller à l'état 75
    '-'       décalage et aller à l'état 67

    variable               aller à l'état 68
    expression             aller à l'état 76
    term                   aller à l'état 70
    factor                 aller à l'état 71
    logical_term           aller à l'état 144
    logical_factor         aller à l'état 79
    comparison_expression  aller à l'état 80
    logical_opd            aller à l'état 81


état 121

   82 do_while_statement: mc_DOWHILE '(' condition ')' . instruction_list mc_ENDDO

    IDF             décalage et aller à l'état 23
    mc_DOWHILE      décalage et aller à l'état 24
    mc_IF           décalage et aller à l'état 25
    mc_READ         décalage et aller à l'état 26
    mc_WRITE        décalage et aller à l'état 27
    mc_EQUIVALENCE  décalage et aller à l'état 28

    variable               aller à l'état 30
    instruction_list       aller à l'état 145
    instruction            aller à l'état 32
    assignment             aller à l'état 33
    read_statement         aller à l'état 34
    write_statement        aller à l'état 35
    function_call          aller à l'état 36
    do_while_statement     aller à l'état 37
    if_statement           aller à l'état 38
    equivalence_statement  aller à l'état 39


état 122

   43 logical_term: logical_term mc_AND . logical_factor

    IDF       décalage et aller à l'état 72
    NBR       décalage et aller à l'état 65
    mc_FALSE  décalage et aller à l'état 73
    mc_TRUE   décalage et aller à l'état 74
    '('       décalage et aller à l'état 75
    '-'       décalage et aller à l'état 67

    variable               aller à l'état 68
    expression             aller à l'état 76
    term                   aller à l'état 70
    factor                 aller à l'état 71
    logical_factor         aller à l'état 146
    comparison_expression  aller à l'état 80
    logical_opd            aller à l'état 81


état 123

   83 if_statement: mc_IF '(' condition ')' . mc_THEN instruction_list mc_ENDIF
   84             | mc_IF '(' condition ')' . mc_THEN instruction_list mc_ELSE instruction_list mc_ENDIF

    mc_THEN  décalage et aller à l'état 147


état 124

   68 read_statement: mc_READ '(' variable ')' . ';'

    ';'  décalage et aller à l'état 148


état 125

   69 write_statement: mc_WRITE '(' message ')' . ';'

    ';'  décalage et aller à l'état 149


état 126

   73 not_void_message: message ',' . elt_message

    IDF             décalage et aller à l'état 72
    NBR             décalage et aller à l'état 65
    STRING_LITERAL  décalage et aller à l'état 84
    '('             décalage et aller à l'état 66
    '-'             décalage et aller à l'état 67

    variable     aller à l'état 68
    expression   aller à l'état 85
    term         aller à l'état 70
    factor       aller à l'état 71
    elt_message  aller à l'état 150


état 127

   85 equivalence_statement: mc_EQUIVALENCE '(' inst_variable_list ')' . ',' '(' inst_variable_list ')' ';'

    ','  décalage et aller à l'état 151


état 128

   23 inst_variable_list: inst_variable_list ',' . variable

    IDF  décalage et aller à l'état 72

    variable  aller à l'état 152


état 129

   67 assignment: variable '=' expression ';' .

    $défaut  réduction par utilisation de la règle 67 (assignment)


état 130

   13 declaration: type mc_DIMENSION '(' INT ')' . ';'

    ';'  décalage et aller à l'état 153


état 131

   14 declaration: type mc_DIMENSION '(' INT ',' . INT ')' ';'

    INT  décalage et aller à l'état 154


état 132

    5 function_declaration: type mc_ROUTINE function_name '(' parameter_list ')' declaration_list instruction_list . return_statement mc_ENDR
   59 instruction_list: instruction_list . instruction

    IDF             décalage et aller à l'état 155
    mc_DOWHILE      décalage et aller à l'état 24
    mc_IF           décalage et aller à l'état 25
    mc_READ         décalage et aller à l'état 26
    mc_WRITE        décalage et aller à l'état 27
    mc_EQUIVALENCE  décalage et aller à l'état 28

    function_name          aller à l'état 156
    variable               aller à l'état 30
    instruction            aller à l'état 55
    assignment             aller à l'état 33
    read_statement         aller à l'état 34
    write_statement        aller à l'état 35
    function_call          aller à l'état 36
    return_statement       aller à l'état 157
    do_while_statement     aller à l'état 37
    if_statement           aller à l'état 38
    equivalence_statement  aller à l'état 39


état 133

   77 function_call: IDF '=' mc_CALL function_name '(' . argument_list ')' ';'

    IDF  décalage et aller à l'état 72
    NBR  décalage et aller à l'état 65
    '('  décalage et aller à l'état 66
    '-'  décalage et aller à l'état 67

    $défaut  réduction par utilisation de la règle 79 (argument_list)

    variable       aller à l'état 68
    expression     aller à l'état 158
    term           aller à l'état 70
    factor         aller à l'état 71
    argument_list  aller à l'état 159


état 134

   28 variable: IDF '(' IDF ',' IDF . ')'

    ')'  décalage et aller à l'état 160


état 135

   26 variable: IDF '(' INT ',' INT . ')'

    ')'  décalage et aller à l'état 161


état 136

   37 factor: '(' expression ')' .

    $défaut  réduction par utilisation de la règle 37 (factor)


état 137

   32 expression: expression '+' term .
   35 term: term . '*' factor
   36     | term . '/' factor

    '*'  décalage et aller à l'état 109
    '/'  décalage et aller à l'état 110

    $défaut  réduction par utilisation de la règle 32 (expression)


état 138

   33 expression: expression '-' term .
   35 term: term . '*' factor
   36     | term . '/' factor

    '*'  décalage et aller à l'état 109
    '/'  décalage et aller à l'état 110

    $défaut  réduction par utilisation de la règle 33 (expression)


état 139

   30 variable: IDF '(' expression ',' expression . ')'
   32 expression: expression . '+' term
   33           | expression . '-' term

    ')'  décalage et aller à l'état 162
    '+'  décalage et aller à l'état 106
    '-'  décalage et aller à l'état 107


état 140

   35 term: term '*' factor .

    $défaut  réduction par utilisation de la règle 35 (term)


état 141

   36 term: term '/' factor .

    $défaut  réduction par utilisation de la règle 36 (term)


état 142

   45 logical_factor: '(' condition ')' .

    $défaut  réduction par utilisation de la règle 45 (logical_factor)


état 143

   32 expression: expression . '+' term
   33           | expression . '-' term
   48 comparison_expression: expression logical_cmprt expression .

    '+'  décalage et aller à l'état 106
    '-'  décalage et aller à l'état 107

    $défaut  réduction par utilisation de la règle 48 (comparison_expression)


état 144

   41 condition: condition mc_OR logical_term .
   43 logical_term: logical_term . mc_AND logical_factor

    mc_AND  décalage et aller à l'état 122

    $défaut  réduction par utilisation de la règle 41 (condition)


état 145

   59 instruction_list: instruction_list . instruction
   82 do_while_statement: mc_DOWHILE '(' condition ')' instruction_list . mc_ENDDO

    IDF             décalage et aller à l'état 23
    mc_DOWHILE      décalage et aller à l'état 24
    mc_ENDDO        décalage et aller à l'état 163
    mc_IF           décalage et aller à l'état 25
    mc_READ         décalage et aller à l'état 26
    mc_WRITE        décalage et aller à l'état 27
    mc_EQUIVALENCE  décalage et aller à l'état 28

    variable               aller à l'état 30
    instruction            aller à l'état 55
    assignment             aller à l'état 33
    read_statement         aller à l'état 34
    write_statement        aller à l'état 35
    function_call          aller à l'état 36
    do_while_statement     aller à l'état 37
    if_statement           aller à l'état 38
    equivalence_statement  aller à l'état 39


état 146

   43 logical_term: logical_term mc_AND logical_factor .

    $défaut  réduction par utilisation de la règle 43 (logical_term)


état 147

   83 if_statement: mc_IF '(' condition ')' mc_THEN . instruction_list mc_ENDIF
   84             | mc_IF '(' condition ')' mc_THEN . instruction_list mc_ELSE instruction_list mc_ENDIF

    IDF             décalage et aller à l'état 23
    mc_DOWHILE      décalage et aller à l'état 24
    mc_IF           décalage et aller à l'état 25
    mc_READ         décalage et aller à l'état 26
    mc_WRITE        décalage et aller à l'état 27
    mc_EQUIVALENCE  décalage et aller à l'état 28

    variable               aller à l'état 30
    instruction_list       aller à l'état 164
    instruction            aller à l'état 32
    assignment             aller à l'état 33
    read_statement         aller à l'état 34
    write_statement        aller à l'état 35
    function_call          aller à l'état 36
    do_while_statement     aller à l'état 37
    if_statement           aller à l'état 38
    equivalence_statement  aller à l'état 39


état 148

   68 read_statement: mc_READ '(' variable ')' ';' .

    $défaut  réduction par utilisation de la règle 68 (read_statement)


état 149

   69 write_statement: mc_WRITE '(' message ')' ';' .

    $défaut  réduction par utilisation de la règle 69 (write_statement)


état 150

   73 not_void_message: message ',' elt_message .

    $défaut  réduction par utilisation de la règle 73 (not_void_message)


état 151

   85 equivalence_statement: mc_EQUIVALENCE '(' inst_variable_list ')' ',' . '(' inst_variable_list ')' ';'

    '('  décalage et aller à l'état 165


état 152

   23 inst_variable_list: inst_variable_list ',' variable .

    $défaut  réduction par utilisation de la règle 23 (inst_variable_list)


état 153

   13 declaration: type mc_DIMENSION '(' INT ')' ';' .

    $défaut  réduction par utilisation de la règle 13 (declaration)


état 154

   14 declaration: type mc_DIMENSION '(' INT ',' INT . ')' ';'

    ')'  décalage et aller à l'état 166


état 155

    6 function_name: IDF .
   24 variable: IDF .
   25         | IDF . '(' INT ')'
   26         | IDF . '(' INT ',' INT ')'
   27         | IDF . '(' IDF ')'
   28         | IDF . '(' IDF ',' IDF ')'
   29         | IDF . '(' expression ')'
   30         | IDF . '(' expression ',' expression ')'
   77 function_call: IDF . '=' mc_CALL function_name '(' argument_list ')' ';'

    '='  décalage et aller à l'état 46
    '('  décalage et aller à l'état 47

    '='  [réduction par utilisation de la règle 6 (function_name)]
    '='  [réduction par utilisation de la règle 24 (variable)]


état 156

   78 return_statement: function_name . '=' expression ';'

    '='  décalage et aller à l'état 167


état 157

    5 function_declaration: type mc_ROUTINE function_name '(' parameter_list ')' declaration_list instruction_list return_statement . mc_ENDR

    mc_ENDR  décalage et aller à l'état 168


état 158

   32 expression: expression . '+' term
   33           | expression . '-' term
   80 argument_list: expression .

    '+'  décalage et aller à l'état 106
    '-'  décalage et aller à l'état 107

    $défaut  réduction par utilisation de la règle 80 (argument_list)


état 159

   77 function_call: IDF '=' mc_CALL function_name '(' argument_list . ')' ';'
   81 argument_list: argument_list . ',' expression

    ')'  décalage et aller à l'état 169
    ','  décalage et aller à l'état 170


état 160

   28 variable: IDF '(' IDF ',' IDF ')' .

    $défaut  réduction par utilisation de la règle 28 (variable)


état 161

   26 variable: IDF '(' INT ',' INT ')' .

    $défaut  réduction par utilisation de la règle 26 (variable)


état 162

   30 variable: IDF '(' expression ',' expression ')' .

    $défaut  réduction par utilisation de la règle 30 (variable)


état 163

   82 do_while_statement: mc_DOWHILE '(' condition ')' instruction_list mc_ENDDO .

    $défaut  réduction par utilisation de la règle 82 (do_while_statement)


état 164

   59 instruction_list: instruction_list . instruction
   83 if_statement: mc_IF '(' condition ')' mc_THEN instruction_list . mc_ENDIF
   84             | mc_IF '(' condition ')' mc_THEN instruction_list . mc_ELSE instruction_list mc_ENDIF

    IDF             décalage et aller à l'état 23
    mc_DOWHILE      décalage et aller à l'état 24
    mc_IF           décalage et aller à l'état 25
    mc_ELSE         décalage et aller à l'état 171
    mc_ENDIF        décalage et aller à l'état 172
    mc_READ         décalage et aller à l'état 26
    mc_WRITE        décalage et aller à l'état 27
    mc_EQUIVALENCE  décalage et aller à l'état 28

    variable               aller à l'état 30
    instruction            aller à l'état 55
    assignment             aller à l'état 33
    read_statement         aller à l'état 34
    write_statement        aller à l'état 35
    function_call          aller à l'état 36
    do_while_statement     aller à l'état 37
    if_statement           aller à l'état 38
    equivalence_statement  aller à l'état 39


état 165

   85 equivalence_statement: mc_EQUIVALENCE '(' inst_variable_list ')' ',' '(' . inst_variable_list ')' ';'

    IDF  décalage et aller à l'état 72

    inst_variable_list  aller à l'état 173
    variable            aller à l'état 91


état 166

   14 declaration: type mc_DIMENSION '(' INT ',' INT ')' . ';'

    ';'  décalage et aller à l'état 174


état 167

   78 return_statement: function_name '=' . expression ';'

    IDF  décalage et aller à l'état 72
    NBR  décalage et aller à l'état 65
    '('  décalage et aller à l'état 66
    '-'  décalage et aller à l'état 67

    variable    aller à l'état 68
    expression  aller à l'état 175
    term        aller à l'état 70
    factor      aller à l'état 71


état 168

    5 function_declaration: type mc_ROUTINE function_name '(' parameter_list ')' declaration_list instruction_list return_statement mc_ENDR .

    $défaut  réduction par utilisation de la règle 5 (function_declaration)


état 169

   77 function_call: IDF '=' mc_CALL function_name '(' argument_list ')' . ';'

    ';'  décalage et aller à l'état 176


état 170

   81 argument_list: argument_list ',' . expression

    IDF  décalage et aller à l'état 72
    NBR  décalage et aller à l'état 65
    '('  décalage et aller à l'état 66
    '-'  décalage et aller à l'état 67

    variable    aller à l'état 68
    expression  aller à l'état 177
    term        aller à l'état 70
    factor      aller à l'état 71


état 171

   84 if_statement: mc_IF '(' condition ')' mc_THEN instruction_list mc_ELSE . instruction_list mc_ENDIF

    IDF             décalage et aller à l'état 23
    mc_DOWHILE      décalage et aller à l'état 24
    mc_IF           décalage et aller à l'état 25
    mc_READ         décalage et aller à l'état 26
    mc_WRITE        décalage et aller à l'état 27
    mc_EQUIVALENCE  décalage et aller à l'état 28

    variable               aller à l'état 30
    instruction_list       aller à l'état 178
    instruction            aller à l'état 32
    assignment             aller à l'état 33
    read_statement         aller à l'état 34
    write_statement        aller à l'état 35
    function_call          aller à l'état 36
    do_while_statement     aller à l'état 37
    if_statement           aller à l'état 38
    equivalence_statement  aller à l'état 39


état 172

   83 if_statement: mc_IF '(' condition ')' mc_THEN instruction_list mc_ENDIF .

    $défaut  réduction par utilisation de la règle 83 (if_statement)


état 173

   23 inst_variable_list: inst_variable_list . ',' variable
   85 equivalence_statement: mc_EQUIVALENCE '(' inst_variable_list ')' ',' '(' inst_variable_list . ')' ';'

    ')'  décalage et aller à l'état 179
    ','  décalage et aller à l'état 128


état 174

   14 declaration: type mc_DIMENSION '(' INT ',' INT ')' ';' .

    $défaut  réduction par utilisation de la règle 14 (declaration)


état 175

   32 expression: expression . '+' term
   33           | expression . '-' term
   78 return_statement: function_name '=' expression . ';'

    ';'  décalage et aller à l'état 180
    '+'  décalage et aller à l'état 106
    '-'  décalage et aller à l'état 107


état 176

   77 function_call: IDF '=' mc_CALL function_name '(' argument_list ')' ';' .

    $défaut  réduction par utilisation de la règle 77 (function_call)


état 177

   32 expression: expression . '+' term
   33           | expression . '-' term
   81 argument_list: argument_list ',' expression .

    '+'  décalage et aller à l'état 106
    '-'  décalage et aller à l'état 107

    $défaut  réduction par utilisation de la règle 81 (argument_list)


état 178

   59 instruction_list: instruction_list . instruction
   84 if_statement: mc_IF '(' condition ')' mc_THEN instruction_list mc_ELSE instruction_list . mc_ENDIF

    IDF             décalage et aller à l'état 23
    mc_DOWHILE      décalage et aller à l'état 24
    mc_IF           décalage et aller à l'état 25
    mc_ENDIF        décalage et aller à l'état 181
    mc_READ         décalage et aller à l'état 26
    mc_WRITE        décalage et aller à l'état 27
    mc_EQUIVALENCE  décalage et aller à l'état 28

    variable               aller à l'état 30
    instruction            aller à l'état 55
    assignment             aller à l'état 33
    read_statement         aller à l'état 34
    write_statement        aller à l'état 35
    function_call          aller à l'état 36
    do_while_statement     aller à l'état 37
    if_statement           aller à l'état 38
    equivalence_statement  aller à l'état 39


état 179

   85 equivalence_statement: mc_EQUIVALENCE '(' inst_variable_list ')' ',' '(' inst_variable_list ')' . ';'

    ';'  décalage et aller à l'état 182


état 180

   78 return_statement: function_name '=' expression ';' .

    $défaut  réduction par utilisation de la règle 78 (return_statement)


état 181

   84 if_statement: mc_IF '(' condition ')' mc_THEN instruction_list mc_ELSE instruction_list mc_ENDIF .

    $défaut  réduction par utilisation de la règle 84 (if_statement)


état 182

   85 equivalence_statement: mc_EQUIVALENCE '(' inst_variable_list ')' ',' '(' inst_variable_list ')' ';' .

    $défaut  réduction par utilisation de la règle 85 (equivalence_statement)
